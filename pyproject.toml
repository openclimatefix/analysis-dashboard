# --- PROJECT CONFIGURATION --- #

[build-system]
requires = ["setuptools>=67", "wheel", "setuptools-git-versioning>=2.0,<3"]
build-backend = "setuptools.build_meta"

# Metadata (see https://peps.python.org/pep-0621/)
[project]
name = "analysis-dashboard"
dynamic = ["version"] # Set automatically using git: https://setuptools-git-versioning.readthedocs.io/en/stable/
description = "Analysis dashboard for OCF forecasting systems"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.12.0,<3.13"
license = {text = "MIT License"}
authors = [
    { name = "Open Climate Fix Team", email = "info@openclimatefix.org" },
    { name = "Peter Dudfield", email = "peter@openclimatefix.org" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "altair==5.5.0",
    "requests==2.32.3",
    "nowcasting_datamodel==1.7.3",
    "pvsite-datamodel==1.2.14",
    "numpy==2.0.0",
    "pandas==2.2.3",
    "plotly==5.24.1",
    "psycopg2-binary==2.9.10",
    "SQLAlchemy==2.0.36",
    "streamlit==1.46.1",
    "testcontainers==4.9.0",
    "uvicorn==0.34.0",
    "geopandas==1.0.1",
    "garrett-streamlit-auth0==0.9",
    "pydantic==2.5.3",
    "xarray>=2024.6",
    "fsspec>=2024.6",
    "s3fs>=2024.6",
    "ocf_blosc2==0.0.11",
    "zarr>=3.0,<4.0",
    "elexonpy==1.0.15",
    "fiona>=1.9,<2.0",
    "herbie-data",
    "numcodecs>=0.12,<1.0",
    "torch @ https://download.pytorch.org/whl/cpu/torch-2.3.1%2Bcpu-cp312-cp312-linux_x86_64.whl ; platform_system == 'Linux' and platform_machine == 'x86_64'",
    "torch @ https://download.pytorch.org/whl/cpu/torch-2.3.1-cp312-none-macosx_11_0_arm64.whl ; platform_system == 'Darwin' and platform_machine == 'arm64'",
    "matplotlib>=3.8,<4.0",
]

[dependency-groups]
dev = [
    # Testing
    "pytest",
    "pytest-cov",
    # Linting and type checking
    "ruff >= 0.9.2",
]

[project.urls]
repository = "https://github.com/openclimatefix/analysis-dashboard"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["test*"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.setuptools-git-versioning]
enabled = true

# --- LINTING AND TYPING CONFIGURATION --- #

# Ruff configuration
# * See https://beta.ruff.rs/docs/
[tool.ruff]
line-length = 100
indent-width = 4
exclude = ["__init__.py"]

[tool.ruff.lint]
select = [
    "F",   # pyflakes
    "E",   # pycodestyle
    "W",   # whitespace and newlines
    "I",   # isort
    "UP",  # modernize
    "B",   # flake8 bugbear
    "C4",  # flake8 comprehensions
    "COM", # flake8 commas
    "T20", # flake8 print
    "SIM", # flake8 simplify
    "ARG", # flake8 unused arguments
    "DTZ", # flake8 datetimes
    "Q",   # flake8 quotes
    "RUF", # ruff-specific rules
]
fixable = ["ALL"]
ignore = [
    "D203", "D213", "D215", "D400", "D401", "D404", "D406",
    "D407", "D408", "D409", "D413",
]

[tool.ruff.lint.per-file-ignores]
"test*" = ["D", "ANN"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 100

# --- TESTING CONFIGURATION --- #

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["src"]
